<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                            http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
                            http://www.springframework.org/schema/context
                            http://www.springframework.org/schema/context/spring-context-3.1.xsd
                            http://www.springframework.org/schema/mvc
                            http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd">

    <beans profile="ui">
        <context:component-scan base-package="com.github.infinitesummer.minimalmustache.controller" use-default-filters="false">
            <!-- According to internet opinion, servlet context should scan for controllers, and application context
       should scan for all else -->
            <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
        </context:component-scan>

        <!-- Annotation-driven is basically black magic:
            Configures support for new Spring MVC features such as
            declarative validation with @Valid, HTTP message
            conversion with @RequestBody/@ResponseBody, new field conversion architecture, etc.
        -->
        <mvc:annotation-driven />

        <!-- View Resolution -->
        <bean id="mustacheViewResolver" class="org.springframework.web.servlet.view.mustache.MustacheViewResolver">
            <property name="order" value="2"/>
            <property name="cache" value="false" />
            <property name="prefix" value="/templates/" />
            <property name="suffix" value=".html" />
            <property name="templateLoader">
                <bean class="org.springframework.web.servlet.view.mustache.MustacheTemplateLoader" />
            </property>
        </bean>
    </beans>
</beans>


